1,6825,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[_c11#28], functions=[], output=[_c11#28])
   +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#30]
      +- HashAggregate(keys=[_c11#28], functions=[], output=[_c11#28])
         +- FileScan csv [_c11#28] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c11:string>
"
2,9.41852299954926,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[_c0#17], functions=[count(_c11#28)], output=[_c0#17, count_interpro#72L])
   +- Exchange hashpartitioning(_c0#17, 200), ENSURE_REQUIREMENTS, [id=#213]
      +- HashAggregate(keys=[_c0#17], functions=[partial_count(_c11#28)], output=[_c0#17, count#85L])
         +- FileScan csv [_c0#17,_c11#28] Batched: false, DataFilters: [], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [], ReadSchema: struct<_c0:string,_c11:string>
"
3,GO:0003700|GO:0006355,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- Sort [count#114L DESC NULLS LAST], true, 0
   +- Exchange rangepartitioning(count#114L DESC NULLS LAST, 200), ENSURE_REQUIREMENTS, [id=#240]
      +- HashAggregate(keys=[_c13#30], functions=[count(1)], output=[_c13#30, count#114L])
         +- Exchange hashpartitioning(_c13#30, 200), ENSURE_REQUIREMENTS, [id=#237]
            +- HashAggregate(keys=[_c13#30], functions=[partial_count(1)], output=[_c13#30, count#118L])
               +- Filter (isnotnull(_c13#30) AND NOT (_c13#30 = -))
                  +- FileScan csv [_c13#30] Batched: false, DataFilters: [isnotnull(_c13#30), NOT (_c13#30 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c13), Not(EqualTo(_c13,-))], ReadSchema: struct<_c13:string>
"
4,59.0,"== Physical Plan ==
*(1) Project [(cast(_c7#24 as double) - cast(_c6#23 as double)) AS size#120]
+- *(1) Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))
   +- FileScan csv [_c6#23,_c7#24,_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c6:string,_c7:string,_c11:string>
"
5,"[Row(_c11='IPR000847', count=16742), Row(_c11='IPR027417', count=14317), Row(_c11='IPR000515', count=10514), Row(_c11='IPR036388', count=9480), Row(_c11='IPR036390', count=8868), Row(_c11='IPR000524', count=7577), Row(_c11='IPR035906', count=7207), Row(_c11='IPR029058', count=6554), Row(_c11='IPR003439', count=6391), Row(_c11='IPR012657', count=5638)]","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=10, orderBy=[count#157L DESC NULLS LAST], output=[_c11#28,count#157L])
   +- HashAggregate(keys=[_c11#28], functions=[count(1)], output=[_c11#28, count#157L])
      +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#346]
         +- HashAggregate(keys=[_c11#28], functions=[partial_count(1)], output=[_c11#28, count#161L])
            +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))
               +- FileScan csv [_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c11:string>
"
6,"[Row(_c11='IPR000847', count=16742), Row(_c11='IPR027417', count=14317), Row(_c11='IPR000515', count=10514), Row(_c11='IPR036388', count=9480), Row(_c11='IPR036390', count=8868), Row(_c11='IPR000524', count=7577), Row(_c11='IPR035906', count=7207), Row(_c11='IPR029058', count=6554), Row(_c11='IPR003439', count=6391), Row(_c11='IPR012657', count=5638)]","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=10, orderBy=[count#197L DESC NULLS LAST], output=[_c11#28,count#197L])
   +- HashAggregate(keys=[_c11#28], functions=[count(1)], output=[_c11#28, count#197L])
      +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#400]
         +- HashAggregate(keys=[_c11#28], functions=[partial_count(1)], output=[_c11#28, count#201L])
            +- Project [_c11#28]
               +- Filter (((((isnotnull(_c7#24) AND isnotnull(_c6#23)) AND isnotnull(_c2#19)) AND isnotnull(_c11#28)) AND NOT (_c11#28 = -)) AND ((cast(_c7#24 as double) - (cast(_c6#23 as double) / cast(_c2#19 as double))) > 0.9))
                  +- FileScan csv [_c2#19,_c6#23,_c7#24,_c11#28] Batched: false, DataFilters: [isnotnull(_c7#24), isnotnull(_c6#23), isnotnull(_c2#19), isnotnull(_c11#28), NOT (_c11#28 = -), ..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c2:string,_c6:string,_c7:string,_c11:string>
"
7,"[Row(_c12='Transcription regulator HTH, LysR', count=16742), Row(_c12='P-loop containing nucleoside triphosphate hydrolase', count=14317), Row(_c12='ABC transporter type 1, transmembrane domain MetI-like', count=10514), Row(_c12='Winged helix-like DNA-binding domain superfamily', count=9480), Row(_c12='Winged helix DNA-binding domain superfamily', count=8868), Row(_c12='Transcription regulator HTH, GntR', count=7577), Row(_c12='MetI-like superfamily', count=7207), Row(_c12='Alpha/Beta hydrolase fold', count=6554), Row(_c12='ABC transporter-like, ATP-binding domain', count=6391), Row(_c12='23S rRNA-intervening sequence protein', count=5638)]","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=10, orderBy=[count#222L DESC NULLS LAST], output=[_c12#29,count#222L])
   +- HashAggregate(keys=[_c12#29], functions=[count(1)], output=[_c12#29, count#222L])
      +- Exchange hashpartitioning(_c12#29, 200), ENSURE_REQUIREMENTS, [id=#462]
         +- HashAggregate(keys=[_c12#29], functions=[partial_count(1)], output=[_c12#29, count#226L])
            +- Filter (isnotnull(_c12#29) AND NOT (_c12#29 = -))
               +- FileScan csv [_c12#29] Batched: false, DataFilters: [isnotnull(_c12#29), NOT (_c12#29 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>
"
8,"[Row(_c12='Maltoporin', count=1), Row(_c12='IrrE N-terminal-like domain', count=1), Row(_c12='Protein FRG1', count=1), Row(_c12='Fibrogen-binding domain 1', count=1), Row(_c12='Lumazine-binding protein', count=1), Row(_c12='RNA polymerase sigma-70, Bacteroidetes type', count=1), Row(_c12='G8 domain', count=1), Row(_c12='Protein of unknown function DUF6713', count=1), Row(_c12='LepB, N-terminal', count=1), Row(_c12='Uncharacterised conserved protein UCP033725', count=1)]","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=10, orderBy=[count#244L ASC NULLS FIRST], output=[_c12#29,count#244L])
   +- HashAggregate(keys=[_c12#29], functions=[count(1)], output=[_c12#29, count#244L])
      +- Exchange hashpartitioning(_c12#29, 200), ENSURE_REQUIREMENTS, [id=#519]
         +- HashAggregate(keys=[_c12#29], functions=[partial_count(1)], output=[_c12#29, count#248L])
            +- Filter (isnotnull(_c12#29) AND NOT (_c12#29 = -))
               +- FileScan csv [_c12#29] Batched: false, DataFilters: [isnotnull(_c12#29), NOT (_c12#29 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c12:string>
"
9,"[Row(_c12='Transcription regulator HTH, LysR', count=16742), Row(_c12='P-loop containing nucleoside triphosphate hydrolase', count=14317), Row(_c12='ABC transporter type 1, transmembrane domain MetI-like', count=10514), Row(_c12='Winged helix-like DNA-binding domain superfamily', count=9480), Row(_c12='Winged helix DNA-binding domain superfamily', count=8868), Row(_c12='Transcription regulator HTH, GntR', count=7577), Row(_c12='MetI-like superfamily', count=7207), Row(_c12='Alpha/Beta hydrolase fold', count=6554), Row(_c12='ABC transporter-like, ATP-binding domain', count=6391), Row(_c12='23S rRNA-intervening sequence protein', count=5638)]","== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- TakeOrderedAndProject(limit=10, orderBy=[count#284L DESC NULLS LAST], output=[_c12#29,count#284L])
   +- HashAggregate(keys=[_c12#29], functions=[count(1)], output=[_c12#29, count#284L])
      +- Exchange hashpartitioning(_c12#29, 200), ENSURE_REQUIREMENTS, [id=#573]
         +- HashAggregate(keys=[_c12#29], functions=[partial_count(1)], output=[_c12#29, count#288L])
            +- Project [_c12#29]
               +- Filter (((((isnotnull(_c7#24) AND isnotnull(_c6#23)) AND isnotnull(_c2#19)) AND isnotnull(_c12#29)) AND ((cast(_c7#24 as double) - (cast(_c6#23 as double) / cast(_c2#19 as double))) > 0.9)) AND NOT (_c12#29 = -))
                  +- FileScan csv [_c2#19,_c6#23,_c7#24,_c12#29] Batched: false, DataFilters: [isnotnull(_c7#24), isnotnull(_c6#23), isnotnull(_c2#19), isnotnull(_c12#29), ((cast(_c7#24 as do..., Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c7), IsNotNull(_c6), IsNotNull(_c2), IsNotNull(_c12), Not(EqualTo(_c12,-))], ReadSchema: struct<_c2:string,_c6:string,_c7:string,_c12:string>
"
10,0.0007049093682388977,"== Physical Plan ==
AdaptiveSparkPlan isFinalPlan=false
+- HashAggregate(keys=[_c11#28], functions=[avg(cast(_c2#19 as double)), count(_c11#28)], output=[_c11#28, avg_size#322, ïnterpro_count#324L])
   +- Exchange hashpartitioning(_c11#28, 200), ENSURE_REQUIREMENTS, [id=#705]
      +- HashAggregate(keys=[_c11#28], functions=[partial_avg(cast(_c2#19 as double)), partial_count(_c11#28)], output=[_c11#28, sum#331, count#332L, count#333L])
         +- Filter (isnotnull(_c11#28) AND NOT (_c11#28 = -))
            +- FileScan csv [_c2#19,_c11#28] Batched: false, DataFilters: [isnotnull(_c11#28), NOT (_c11#28 = -)], Format: CSV, Location: InMemoryFileIndex(1 paths)[file:/data/datasets/EBI/interpro/refseq_scan/bacteria.nonredundant_pro..., PartitionFilters: [], PushedFilters: [IsNotNull(_c11), Not(EqualTo(_c11,-))], ReadSchema: struct<_c2:string,_c11:string>
"
